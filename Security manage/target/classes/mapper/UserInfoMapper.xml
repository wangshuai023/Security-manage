<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.meeting.dao.UserInfoMapper">
    <resultMap id="BaseResultMap" type="com.meeting.model.UserInfo">
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="login_name" property="loginName" jdbcType="VARCHAR" />
        <result column="password" property="password" jdbcType="VARCHAR" />
        <result column="real_name" property="realName" jdbcType="VARCHAR" />
        <result column="cel_phone" property="celPhone" jdbcType="VARCHAR" />
        <result column="sex" property="sex" jdbcType="INTEGER" />
        <result column="department" property="department" jdbcType="VARCHAR" />
        <result column="region" property="region" jdbcType="VARCHAR" />
        <result column="levels" property="levels" jdbcType="VARCHAR" />
        <result column="banzu" property="banzu" jdbcType="VARCHAR" />
        <result column="post" property="post" jdbcType="VARCHAR" />
        <result column="create_time" property="createTime" jdbcType="VARCHAR" />

    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id,login_name,password,real_name,cel_phone,sex,department,region,levels,banzu,post,create_time
    </sql>
    <select id="selectByExample" parameterType="com.meeting.model.UserInfoExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List" />
        from user_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="startRow >= 0 and pageRows > 0">
            limit ${startRow},${pageRows}
        </if>

    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from user_info
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from user_info
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.meeting.model.UserInfoExample">
        delete from user_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <insert id="insert" parameterType="com.meeting.model.UserInfo">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>

        insert into user_info (login_name,password,real_name,cel_phone,sex,department,region,levels,banzu,post,create_time)
        values (	#{id,jdbcType=INTEGER},	#{loginName,jdbcType=VARCHAR},	#{password,jdbcType=VARCHAR},	#{realName,jdbcType=VARCHAR},	#{celPhone,jdbcType=VARCHAR},	#{sex,jdbcType=INTEGER},  #{department,jdbcType=VARCHAR},   #{region,jdbcType=VARCHAR},   #{levels,jdbcType=VARCHAR}, #{banzu,jdbcType=VARCHAR},  #{post,jdbcType=VARCHAR}, 	#{createTime,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.meeting.model.UserInfo">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>

        insert into user_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null" >
                id,
            </if>
            <if test="loginName != null" >
                login_name,
            </if>
            <if test="password != null" >
                password,
            </if>
            <if test="realName != null" >
                real_name,
            </if>
            <if test="celPhone != null" >
                cel_phone,
            </if>
            <if test="sex != null" >
                sex,
            </if>
            <if test="department != null" >
                department,
            </if>
            <if test="region != null" >
                region,
            </if>
            <if test="levels != null" >
                levels,
            </if>
            <if test="banzu != null" >
                banzu,
            </if>
            <if test="post != null" >
                post,
            </if>

            <if test="createTime != null" >
                create_time
            </if>

        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null" >
                #{id,jdbcType=INTEGER},
            </if>
            <if test="loginName != null" >
                #{loginName,jdbcType=VARCHAR},
            </if>
            <if test="password != null" >
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="realName != null" >
                #{realName,jdbcType=VARCHAR},
            </if>
            <if test="celPhone != null" >
                #{celPhone,jdbcType=VARCHAR},
            </if>
            <if test="sex != null" >
                #{sex,jdbcType=INTEGER},
            </if>
            <if test="department != null" >
                department = #{department,jdbcType=VARCHAR},
            </if>
            <if test="region != null" >
                region = #{region,jdbcType=VARCHAR},
            </if>
            <if test="levels != null" >
                levels = #{levels,jdbcType=VARCHAR},
            </if>
            <if test="banzu != null" >
                banzu = #{banzu,jdbcType=VARCHAR},
            </if>
            <if test="post != null" >
                post = #{post,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null" >
                #{createTime,jdbcType=VARCHAR},
            </if>

        </trim>
    </insert>
    <select id="countByExample" parameterType="com.meeting.model.UserInfoExample" resultType="java.lang.Long">
        select count(*) from user_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update user_info
        <set>
            <if test="record.loginName != null" >
                login_name = #{record.loginName,jdbcType=VARCHAR},
            </if>
            <if test="record.password != null" >
                password = #{record.password,jdbcType=VARCHAR},
            </if>
            <if test="record.realName != null" >
                real_name = #{record.realName,jdbcType=VARCHAR},
            </if>
            <if test="record.celPhone != null" >
                cel_phone = #{record.celPhone,jdbcType=VARCHAR},
            </if>
            <if test="record.sex != null" >
                sex = #{record.sex,jdbcType=INTEGER},
            </if>
            <if test="record.department != null" >
                department = #{record.department,jdbcType=VARCHAR},
            </if>
            <if test="record.region != null" >
                region = #{record.region,jdbcType=VARCHAR},
            </if>
            <if test="record.levels != null" >
                levels = #{record.levels,jdbcType=VARCHAR},
            </if>
            <if test="record.banzu != null" >
                banzu = #{record.banzu,jdbcType=VARCHAR},
            </if>
            <if test="record.post != null" >
                post = #{record.post,jdbcType=VARCHAR},
            </if>
            <if test="record.createTime != null" >
                create_time = #{record.createTime,jdbcType=VARCHAR}
            </if>

        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update user_info
        set
        login_name = #{record.loginName,jdbcType=VARCHAR},	password = #{record.password,jdbcType=VARCHAR},	real_name = #{record.realName,jdbcType=VARCHAR},	cel_phone = #{record.celPhone,jdbcType=VARCHAR},	sex = #{record.sex,jdbcType=INTEGER},department = #{record.department,jdbcType=VARCHAR},   region = #{record.region,jdbcType=VARCHAR},   levels = #{record.levels,jdbcType=VARCHAR},  banzu = #{record.banzu,jdbcType=VARCHAR},   post = #{record.post,jdbcType=VARCHAR},		create_time = #{record.createTime,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.meeting.model.UserInfo">
        update user_info
        <set>
            <if test="loginName != null" >
                login_name = #{loginName,jdbcType=VARCHAR},
            </if>
            <if test="password != null" >
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="realName != null" >
                real_name = #{realName,jdbcType=VARCHAR},
            </if>
            <if test="celPhone != null" >
                cel_phone = #{celPhone,jdbcType=VARCHAR},
            </if>
            <if test="sex != null" >
                sex = #{sex,jdbcType=INTEGER},
            </if>
            <if test="department != null" >
                department = #{department,jdbcType=VARCHAR},
            </if>
            <if test="region != null" >
                region = #{region,jdbcType=VARCHAR},
            </if>
            <if test="levels != null" >
                levels = #{levels,jdbcType=VARCHAR},
            </if>
            <if test="banzu != null" >
                banzu = #{banzu,jdbcType=VARCHAR},
            </if>
            <if test="post != null" >
                post = #{post,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null" >
                create_time = #{createTime,jdbcType=VARCHAR}
            </if>
            <if test="createTime != null" >
                create_time = #{createTime,jdbcType=VARCHAR}
            </if>

        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.meeting.model.UserInfo">
        update user_info
        set
            login_name = #{loginName,jdbcType=VARCHAR},	password = #{password,jdbcType=VARCHAR},	real_name = #{realName,jdbcType=VARCHAR},	cel_phone = #{celPhone,jdbcType=VARCHAR},	sex = #{sex,jdbcType=INTEGER},   department = #{department,jdbcType=VARCHAR},   region = #{region,jdbcType=VARCHAR},   levels = #{levels,jdbcType=VARCHAR},   banzu = #{banzu,jdbcType=VARCHAR}, post = #{post,jdbcType=VARCHAR},	create_time = #{createTime,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>

</mapper>
