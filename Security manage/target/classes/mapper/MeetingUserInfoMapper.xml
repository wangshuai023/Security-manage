<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.meeting.dao.MeetingUserInfoMapper">
  <resultMap id="BaseResultMap" type="com.meeting.model.MeetingUserInfo">
    <id column="id" jdbcType="INTEGER" property="id" />
        <result column="meeting_id" property="meetingId" jdbcType="INTEGER" />
  <result column="meeting_user_id" property="meetingUserId" jdbcType="INTEGER" />
  <result column="user_id" property="userId" jdbcType="INTEGER" />
  <result column="user_name" property="userName" jdbcType="VARCHAR" />
  <result column="user_cel" property="userCel" jdbcType="VARCHAR" />
  <result column="order_date" property="orderDate" jdbcType="VARCHAR" />
  <result column="order_time" property="orderTime" jdbcType="VARCHAR" />
  <result column="sign_status" property="signStatus" jdbcType="INTEGER" />
  <result column="create_time" property="createTime" jdbcType="VARCHAR" />

  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
     id,meeting_id,meeting_user_id,user_id,user_name,user_cel,order_date,order_time,sign_status,create_time
  </sql>
  <select id="selectByExample" parameterType="com.meeting.model.MeetingUserInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from meeting_user_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
     <if test="startRow >= 0 and pageRows > 0">
  limit ${startRow},${pageRows}
  </if>

  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
     from meeting_user_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
   delete from meeting_user_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.meeting.model.MeetingUserInfoExample">
    delete from meeting_user_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.meeting.model.MeetingUserInfo">
      <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
  SELECT LAST_INSERT_ID()
</selectKey>

      insert into meeting_user_info (meeting_id,meeting_user_id,user_id,user_name,user_cel,order_date,order_time,sign_status,create_time)
      values (	#{id,jdbcType=INTEGER},	#{meetingId,jdbcType=INTEGER},	#{meetingUserId,jdbcType=INTEGER},	#{userId,jdbcType=INTEGER},	#{userName,jdbcType=VARCHAR},	#{userCel,jdbcType=VARCHAR},	#{orderDate,jdbcType=VARCHAR},	#{orderTime,jdbcType=VARCHAR},	#{signStatus,jdbcType=INTEGER},	#{createTime,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.meeting.model.MeetingUserInfo">
   <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
  SELECT LAST_INSERT_ID()
</selectKey>

    insert into meeting_user_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null" >
	  id,
 </if>
<if test="meetingId != null" >
	  meeting_id,
 </if>
<if test="meetingUserId != null" >
	  meeting_user_id,
 </if>
<if test="userId != null" >
	  user_id,
 </if>
<if test="userName != null" >
	  user_name,
 </if>
<if test="userCel != null" >
	  user_cel,
 </if>
<if test="orderDate != null" >
	  order_date,
 </if>
<if test="orderTime != null" >
	  order_time,
 </if>
<if test="signStatus != null" >
	  sign_status,
 </if>
<if test="createTime != null" >
	  create_time
 </if>

    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
         <if test="id != null" >
	 #{id,jdbcType=INTEGER},
	 </if>
  <if test="meetingId != null" >
	 #{meetingId,jdbcType=INTEGER},
	 </if>
  <if test="meetingUserId != null" >
	 #{meetingUserId,jdbcType=INTEGER},
	 </if>
  <if test="userId != null" >
	 #{userId,jdbcType=INTEGER},
	 </if>
  <if test="userName != null" >
	 #{userName,jdbcType=VARCHAR},
	 </if>
  <if test="userCel != null" >
	 #{userCel,jdbcType=VARCHAR},
	 </if>
  <if test="orderDate != null" >
	 #{orderDate,jdbcType=VARCHAR},
	 </if>
  <if test="orderTime != null" >
	 #{orderTime,jdbcType=VARCHAR},
	 </if>
  <if test="signStatus != null" >
	 #{signStatus,jdbcType=INTEGER},
	 </if>
  <if test="createTime != null" >
	 #{createTime,jdbcType=VARCHAR},
	 </if>

    </trim>
  </insert>
  <select id="countByExample" parameterType="com.meeting.model.MeetingUserInfoExample" resultType="java.lang.Long">
    select count(*) from meeting_user_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update meeting_user_info
    <set>
       <if test="record.meetingId != null" >
	 meeting_id = #{record.meetingId,jdbcType=INTEGER},
</if>
 <if test="record.meetingUserId != null" >
	 meeting_user_id = #{record.meetingUserId,jdbcType=INTEGER},
</if>
 <if test="record.userId != null" >
	 user_id = #{record.userId,jdbcType=INTEGER},
</if>
 <if test="record.userName != null" >
	 user_name = #{record.userName,jdbcType=VARCHAR},
</if>
 <if test="record.userCel != null" >
	 user_cel = #{record.userCel,jdbcType=VARCHAR},
</if>
 <if test="record.orderDate != null" >
	 order_date = #{record.orderDate,jdbcType=VARCHAR},
</if>
 <if test="record.orderTime != null" >
	 order_time = #{record.orderTime,jdbcType=VARCHAR},
</if>
 <if test="record.signStatus != null" >
	 sign_status = #{record.signStatus,jdbcType=INTEGER},
</if>
 <if test="record.createTime != null" >
	 create_time = #{record.createTime,jdbcType=VARCHAR}
</if>

    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update meeting_user_info
    set 
    				meeting_id = #{record.meetingId,jdbcType=INTEGER},	meeting_user_id = #{record.meetingUserId,jdbcType=INTEGER},	user_id = #{record.userId,jdbcType=INTEGER},	user_name = #{record.userName,jdbcType=VARCHAR},	user_cel = #{record.userCel,jdbcType=VARCHAR},	order_date = #{record.orderDate,jdbcType=VARCHAR},	order_time = #{record.orderTime,jdbcType=VARCHAR},	sign_status = #{record.signStatus,jdbcType=INTEGER},	create_time = #{record.createTime,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.meeting.model.MeetingUserInfo">
    update meeting_user_info
    <set>
       <if test="meetingId != null" >
	 meeting_id = #{meetingId,jdbcType=INTEGER},
</if>
 <if test="meetingUserId != null" >
	 meeting_user_id = #{meetingUserId,jdbcType=INTEGER},
</if>
 <if test="userId != null" >
	 user_id = #{userId,jdbcType=INTEGER},
</if>
 <if test="userName != null" >
	 user_name = #{userName,jdbcType=VARCHAR},
</if>
 <if test="userCel != null" >
	 user_cel = #{userCel,jdbcType=VARCHAR},
</if>
 <if test="orderDate != null" >
	 order_date = #{orderDate,jdbcType=VARCHAR},
</if>
 <if test="orderTime != null" >
	 order_time = #{orderTime,jdbcType=VARCHAR},
</if>
 <if test="signStatus != null" >
	 sign_status = #{signStatus,jdbcType=INTEGER},
</if>
 <if test="createTime != null" >
	 create_time = #{createTime,jdbcType=VARCHAR}
</if>

    </set>
     where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.meeting.model.MeetingUserInfo">
    update meeting_user_info
    set 
     			meeting_id = #{meetingId,jdbcType=INTEGER},	meeting_user_id = #{meetingUserId,jdbcType=INTEGER},	user_id = #{userId,jdbcType=INTEGER},	user_name = #{userName,jdbcType=VARCHAR},	user_cel = #{userCel,jdbcType=VARCHAR},	order_date = #{orderDate,jdbcType=VARCHAR},	order_time = #{orderTime,jdbcType=VARCHAR},	sign_status = #{signStatus,jdbcType=INTEGER},	create_time = #{createTime,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
</mapper>
